q()
install.packages("quarto")
install.packages("dslabs")
library(dslabs)
data("polls_us_election_2016")
install.packages("dslabs")
library(dslabs)
data("polls_us_election_2016")
head(polls_us_election_2016, 10)
total_na <- sum(is.na(polls_us_election_2016))
total_na
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
modified_data <- polls_us_election_2016 %>%
mutate(across(where(is.numeric), ~replace_na(., 1990)),across(where(is.character), ~replace_na(., "Ali")))
chooseCRANmirror()
getOption("repos")
options(repos = c(CRAN = "https://cloud.r-project.org"))
getOption("repos")
install.packages("dslabs")
library(dslabs)
data("polls_us_election_2016")
head(polls_us_election_2016, 10)
total_na <- sum(is.na(polls_us_election_2016))
total_na
options(repos = c(CRAN = "https://cloud.r-project.org"))
install.packages("dslabs")
```{r setup, include=FALSE}
```{r setup, include=FALSE}
options(repos = c(CRAN = "https://cloud.r-project.org"))
install.packages("dslabs")
install.packages("dplyr")
library(dslabs)
library(dplyr)
options(repos = c(CRAN = "https://cloud.r-project.org"))
library(dslabs)
library(dplyr)
head(polls_us_election_2016, 10)
install.packages("dslabs")
library(dslabs)
data("polls_us_election_2016")
total_na <- sum(is.na(polls_us_election_2016))
total_na
install.packages("dslabs")
library(dslabs)
data("polls_us_election_2016")
modified_data <- polls_us_election_2016
birth_year <- 2004
first_name <- "firdevs"
for (col in names(modified_data)) {
if (is.numeric(modified_data[[col]])) {
modified_data[[col]][is.na(modified_data[[col]])] <- birth_year
} else if (is.character(modified_data[[col]]) || is.factor(modified_data[[col]])) {
modified_data[[col]][is.na(modified_data[[col]])] <- first_name
}
}
options(repos = c(CRAN = "https://cloud.r-project.org"))
library(dslabs)
library(dplyr)
head(modified_data, 10)
remaining_na <- sum(is.na(modified_data))
remaining_na
library(dslabs)
data("polls_us_election_2016")
modified_data <- polls_us_election_2016
birth_year <- 2004
first_name <- "firdevs"
for (col in names(modified_data)) {
if (is.numeric(modified_data[[col]])) {
modified_data[[col]][is.na(modified_data[[col]])] <- birth_year
} else if (is.character(modified_data[[col]]) || is.factor(modified_data[[col]])) {
modified_data[[col]][is.na(modified_data[[col]])] <- first_name
}
}
install.packages("dslabs")
library(dslabs)
data("polls_us_election_2016")
modified_data <- polls_us_election_2016
birth_year <- 2004
first_name <- "firdevs"
for (col in names(modified_data)) {
if (is.numeric(modified_data[[col]])) {
modified_data[[col]][is.na(modified_data[[col]])] <- birth_year
} else if (is.character(modified_data[[col]]) || is.factor(modified_data[[col]])) {
modified_data[[col]][is.na(modified_data[[col]])] <- first_name
}
}
options(repos = c(CRAN = "https://cloud.r-project.org"))
library(dslabs)
library(dplyr)
install.packages("dslabs")
library(dslabs)
data("polls_us_election_2016")
modified_data <- polls_us_election_2016
birth_year <- 2004
first_name <- "firdevs"
# Her sütunu kontrol et
for (col in names(modified_data)) {
if (is.numeric(modified_data[[col]])) {
# Sayısal sütunlardaki NA değerlerini doğum yılı ile değiştir
modified_data[[col]][is.na(modified_data[[col]])] <- birth_year
} else if (is.character(modified_data[[col]]) || is.factor(modified_data[[col]])) {
# Eğer sütun faktörse, yeni seviyeyi ekle
if (is.factor(modified_data[[col]])) {
modified_data[[col]] <- factor(modified_data[[col]], levels = c(levels(modified_data[[col]]), first_name))
}
# Karakter sütunlarındaki NA değerlerini ilk ad ile değiştir
modified_data[[col]][is.na(modified_data[[col]])] <- first_name
}
}
install.packages("dslabs")
install.packages("dslabs")
library(dslabs)
data("polls_us_election_2016")
modified_data <- polls_us_election_2016
birth_year <- 2004
first_name <- "firdevs"
# Her sütunu kontrol et
for (col in names(modified_data)) {
if (is.numeric(modified_data[[col]])) {
# Sayısal sütunlardaki NA değerlerini doğum yılı ile değiştir
modified_data[[col]][is.na(modified_data[[col]])] <- birth_year
} else if (is.character(modified_data[[col]]) || is.factor(modified_data[[col]])) {
# Eğer sütun faktörse, yeni seviyeyi ekle
if (is.factor(modified_data[[col]])) {
modified_data[[col]] <- factor(modified_data[[col]], levels = c(levels(modified_data[[col]]), first_name))
}
# Karakter sütunlarındaki NA değerlerini ilk ad ile değiştir
modified_data[[col]][is.na(modified_data[[col]])] <- first_name
}
}
options(repos = c(CRAN = "https://cloud.r-project.org"))
library(dslabs)
library(dplyr)
head(modified_data, 10)
remaining_na <- sum(is.na(modified_data))
remaining_na
git--version
git--version
git --version
options(repos = c(CRAN = "https://cran.rstudio.com/"))
options(repos = c(CRAN = "https://cran.rstudio.com/"))
options(repos = c(CRAN = "https://cloud.r-project.org/"))
install.packages("rmarkdown")
install.packages("knitr")
install.packages("evaluate")
options(repos = c(CRAN = "https://cran.rstudio.com/"))
install.packages("rmarkdown")
install.packages("knitr")
install.packages("evaluate")
